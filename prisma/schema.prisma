generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl", "native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model FcmToken {
  userId    BigInt
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @db.DateTime(0)
  fcmToken  String?  @db.VarChar(200)
  deviceId  String   @unique @db.VarChar(200)
  id        BigInt   @id @default(autoincrement())
  User      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model User {
  createdAt   DateTime   @default(now()) @db.DateTime(0)
  updatedAt   DateTime   @default(now()) @db.DateTime(0)
  phoneNumber String     @unique @db.Char(11)
  birthday    String     @db.Char(8)
  gender      String     @db.Char(1)
  email       String     @unique @db.VarChar(50)
  password    String     @db.VarChar(64)
  name        String     @db.VarChar(8)
  id          BigInt     @id @default(autoincrement())
  FcmToken    FcmToken[]
}

model PlaceAdmin {
  createdAt   DateTime @default(now()) @db.DateTime(0)
  updatedAt   DateTime @default(now()) @db.DateTime(0)
  phoneNumber String   @unique @db.Char(11)
  birthday    String   @db.Char(8)
  gender      String   @db.Char(1)
  email       String   @unique @db.VarChar(50)
  password    String   @db.VarChar(64)
  name        String   @db.VarChar(8)
  id          BigInt   @id @default(autoincrement())
  Center      Center[]
}

model Center {
  id                      BigInt                    @id @default(autoincrement())
  adminId                 BigInt
  createAt                DateTime                  @default(now()) @db.DateTime(0)
  updatedAt               DateTime                  @default(now()) @db.DateTime(0)
  name                    String                    @db.VarChar(40)
  address                 String                    @unique @db.VarChar(85)
  phoneNumber             String                    @unique @db.VarChar(20)
  PlaceAdmin              PlaceAdmin                @relation(fields: [adminId], references: [id])
  CenterLookupInformation CenterLookupInformation[]
  CenterParkingLot        CenterParkingLot?
  Studio                  Studio[]

  @@index([adminId])
}

model CenterLookupInformation {
  id                 BigInt   @id @default(autoincrement())
  centerId           BigInt
  createAt           DateTime @default(now()) @db.DateTime(0)
  updateAt           DateTime @default(now()) @db.DateTime(0)
  ceoName            String   @db.VarChar(20)
  busniessType       String   @db.VarChar(250)
  busniessCode       String   @unique @db.Char(10)
  businessAttachment String   @db.Text
  adminPhonenumber   String   @db.Char(11)
  adminEmail         String   @db.VarChar(50)
  Center             Center   @relation(fields: [centerId], references: [id])

  @@index([centerId])
}

model Studio {
  id                  BigInt               @id @default(autoincrement())
  centerId            BigInt
  createdAt           DateTime             @default(now()) @db.DateTime(0)
  updateAt            DateTime             @default(now()) @db.DateTime(0)
  name                String               @db.VarChar(40)
  content             String               @db.Text
  checkInNotice       String?              @db.Text
  openHours           DateTime?            @db.DateTime(0)
  closedHours         DateTime?            @db.DateTime(0)
  minimumReantalTime  Int?
  rentalTimeUnit      Int?
  basicOccupancy      Int
  maximumOccupancy    Int
  overCharge          Int
  lowestPrice         Int
  highestPrice        Int
  precaution          String?              @db.Text
  Center              Center               @relation(fields: [centerId], references: [id])
  StudioAmenity       StudioAmenity?
  StudioBreakTime     StudioBreakTime[]
  StudioComplimentary StudioComplimentary?
  StudioHashTag       StudioHashTag[]
  StudioHoliday       StudioHoliday[]
  StudioPrecaution    StudioPrecaution?
  StudioPriceByHour   StudioPriceByHour[]

  @@index([centerId])
}

model StudioAmenity {
  studioId    BigInt      @id
  name        String      @db.VarChar(20)
  AmenityList AmenityList @relation(fields: [name], references: [name])
  Studio      Studio      @relation(fields: [studioId], references: [id])

  @@index([name])
}

model StudioBreakTime {
  id       BigInt   @id @default(autoincrement())
  studioId BigInt
  date     DateTime @db.Date
  time     DateTime @db.Time(0)
  reason   String   @db.VarChar(200)
  Studio   Studio   @relation(fields: [studioId], references: [id])

  @@index([studioId])
}

model StudioComplimentary {
  studioId          BigInt            @id
  name              String            @db.VarChar(20)
  ComplimentaryList ComplimentaryList @relation(fields: [name], references: [name])
  Studio            Studio            @relation(fields: [studioId], references: [id])

  @@index([name])
}

model StudioHashTag {
  id       BigInt @id @default(autoincrement())
  studioId BigInt
  content  String @db.VarChar(30)
  Studio   Studio @relation(fields: [studioId], references: [id])

  @@index([studioId])
}

model StudioHoliday {
  id       BigInt   @id @default(autoincrement())
  studioId BigInt
  date     DateTime @db.Date
  reason   String   @db.VarChar(200)
  Studio   Studio   @relation(fields: [studioId], references: [id])

  @@index([studioId])
}

model StudioPrecaution {
  studioId       BigInt         @id
  name           String         @db.VarChar(20)
  PrecautionList PrecautionList @relation(fields: [name], references: [name])
  Studio         Studio         @relation(fields: [studioId], references: [id])

  @@index([name])
}

model StudioPriceByHour {
  id        BigInt   @id @default(autoincrement())
  studioId  BigInt
  updateAt  DateTime @default(now()) @db.DateTime(0)
  dayOfWeek String   @db.VarChar(10)
  time      DateTime @db.Time(0)
  price     Int
  Studio    Studio   @relation(fields: [studioId], references: [id])

  @@index([studioId])
}

model AmenityList {
  name          String          @id @db.VarChar(20)
  image         String          @db.Text
  StudioAmenity StudioAmenity[]
}

model CenterParkingLot {
  centerId        BigInt    @id @default(autoincrement())
  updateAt        DateTime  @default(now()) @db.DateTime(0)
  isAvailable     Boolean
  isPayment       Boolean
  paymentType     String?   @db.Char(4)
  first           DateTime? @db.Time(0)
  firstPayment    Int?
  addition        DateTime? @db.Time(0)
  additionPayment Int?
  allDayPayment   Int?
  oneTimePayment  Int?
  content         String?   @db.Text
  Center          Center    @relation(fields: [centerId], references: [id])
}

model ComplimentaryList {
  name                String                @id @db.VarChar(20)
  image               String?               @db.Text
  StudioComplimentary StudioComplimentary[]
}

model PrecautionList {
  name             String             @id @db.VarChar(20)
  content          String             @db.Text
  StudioPrecaution StudioPrecaution[]
}
