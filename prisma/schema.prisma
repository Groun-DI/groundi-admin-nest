generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["linux-musl", "native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model FcmToken {
  userId    BigInt
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @db.DateTime(0)
  fcmToken  String?  @db.VarChar(200)
  deviceId  String   @unique @db.VarChar(200)
  id        BigInt   @id @default(autoincrement())
  User      User     @relation(fields: [userId], references: [id], onDelete: NoAction, map: "FcmToken_ibfk_1")

  @@index([userId], map: "FcmToken_ibfk_1")
}

model User {
  createdAt   DateTime   @default(now()) @db.DateTime(0)
  updatedAt   DateTime   @default(now()) @db.DateTime(0)
  phoneNumber String     @unique @db.Char(11)
  birthday    String     @db.Char(8)
  gender      String     @db.Char(1)
  email       String     @unique @db.VarChar(50)
  password    String     @db.VarChar(64)
  name        String     @db.VarChar(8)
  id          BigInt     @id @default(autoincrement())
  FcmToken    FcmToken[]
}

model PlaceAdmin {
  createdAt   DateTime @default(now()) @db.DateTime(0)
  updatedAt   DateTime @default(now()) @db.DateTime(0)
  phoneNumber String   @unique @db.Char(11)
  birthday    String   @db.Char(8)
  gender      String   @db.Char(1)
  email       String   @unique @db.VarChar(50)
  password    String   @db.VarChar(64)
  name        String   @db.VarChar(8)
  id          BigInt   @id @default(autoincrement())
  Center      Center[]
}

model Center {
  id                      BigInt                    @id @unique(map: "id") @default(autoincrement())
  adminId                 BigInt
  createAt                DateTime                  @default(now()) @db.DateTime(0)
  updatedAt               DateTime                  @default(now()) @db.DateTime(0)
  name                    String                    @db.VarChar(40)
  address                 String                    @unique(map: "address") @db.VarChar(85)
  phoneNumber             String                    @unique(map: "phoneNumber") @db.VarChar(20)
  PlaceAdmin              PlaceAdmin                @relation(fields: [adminId], references: [id], onDelete: NoAction, map: "Center_ibfk_1")
  CenterLookupInformation CenterLookupInformation[]

  @@index([adminId], map: "Center_ibfk_1")
}

model CenterLookupInformation {
  id                 BigInt   @id @unique(map: "id") @default(autoincrement())
  centerId           BigInt
  createAt           DateTime @default(now()) @db.DateTime(0)
  updateAt           DateTime @default(now()) @db.DateTime(0)
  ceoName            String   @db.VarChar(20)
  busniessType       String   @db.VarChar(250)
  busniessCode       String   @unique(map: "busniessCode") @db.Char(10)
  businessAttachment String   @db.Text
  adminPhonenumber   String   @db.Char(11)
  adminEmail         String   @db.VarChar(50)
  Center             Center   @relation(fields: [centerId], references: [id], onDelete: NoAction, map: "CenterLookupInformation_ibfk_1")

  @@index([centerId], map: "centerId")
}
